<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Attribute\Route;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Serializer\SerializerInterface;

use App\Repository\UserRepository;
use App\Entity\User;

#[Route('/api')]
class UserController extends AbstractController
{
    #[Route('/users', name: 'app_user', methods: ['GET'])]
    public function getUserList(UserRepository $UserRepository, SerializerInterface $serializer): JsonResponse
    {
        $userList = $UserRepository->findAll();
        $jsonUserList = $serializer->serialize($userList, 'json');

        return new JsonResponse($jsonUserList, Response::HTTP_OK, [], true);
    }

    #[Route('/users/{id}', name: 'app_user_show', methods: ['GET'])]
    public function getUserShow(User $user, SerializerInterface $serializer): JsonResponse
    {
        return new JsonResponse($serializer->serialize($user, 'json'), Response::HTTP_OK, [], true);
    }

    #[Route('/users', name: 'app_user_create', methods: ['POST'])]
    public function createUser(): JsonResponse
    {
        return new JsonResponse([
            'message' => 'User created',
        ]);
    }

    #[Route('/users/{id}', name: 'app_user_update', methods: ['PUT'])]
    public function updateUser(User $user): JsonResponse
    {
        return new JsonResponse([
            'message' => 'User updated',
        ]);
    }

    #[Route('/users/{id}', name: 'app_user_delete', methods: ['DELETE'])]
    public function deleteUser(User $user): JsonResponse
    {
        return new JsonResponse([
            'message' => 'User deleted',
        ]);
    }
}
